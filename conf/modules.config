/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {

    
    withName: 'FASTQC_PRE' {
            ext.args = '--quiet'
            ext.prefix = { "${meta.id}_initial" }  
            publishDir = [
                path: { "${params.outdir}/FASTQC/INITIAL" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

    withName: 'FASTQC_POST' {
        ext.args = '--quiet'  
        ext.prefix = { "${meta.id}_final" }    
        publishDir = [
            path: { "${params.outdir}/FASTQC/FINAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTP' {
        ext.args   = params.fasta_adapter ? "--adapter_fasta ${params.fasta_adapter}" : ""
        publishDir = [
            path: { "${params.outdir}/FASTP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'KRAKEN2_KRAKEN2' {
        ext.args   = params.kraken2_db ? "--db ${params.kraken2_db} --quick" : "--quick"
        ext.prefix = { "${meta.id}_kraken2_host_filter" }
        memory     = '16 GB'
        time       = '4h'
        publishDir = [
            path: { "${params.outdir}/HOST_REMOVAL/${task.tag ?: 'unknown_sample'}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'IRMA' {
        ext.args   = ''  // Additional IRMA arguments
        errorStrategy = 'ignore'  //Ignore errors
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/assembly/irma" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SPADES' {
        ext.args   = '--careful -k 21,33,55'  // SPAdes arguments matching your pipeline
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/assembly/spades" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ABACAS' {
        ext.args   = '-p nucmer -b'  // ABACAS arguments matching your pipeline
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/assembly/abacas" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> 
                filename.equals('versions.yml') ? null : filename 
            }
        ]
    }
    
}